module main;

use core;
use foo::bar;

extern fn putchar(x: int);

fn foo() -> int {
    3 + 3;
};

// foo $ bar
fn bar(x: int) {};

fn baz(x: int, y: int) {};

fn main() {
    let x: int = 2 + 5 * 4;
    for i: int = 1; i < x; 1 {
        x = (3 - 4) / 2;
        if x > 10 {
            x = 8;
        };
    };

    if x >= 3 {
        let y: int = 2;
        -y;
    } else {
        x + 1 * 4;
    };

    if x == 10 {
        -x;
    } else if x > 10 {
        foo;
    } else if x < 10 {
        foob;
    } else {
        -!-x;
    };

    let a: [int] = [];
    a = [1, 2, 3];
    x = a[0];
    x = a[1 + 1];

    foo();
    bar(x);
    baz(x, y);
    let y: int;
    let c: char = 'c';
    c = '\n';

    i += 1;

    x.method();
    x.field += 1;
};

struct Foo {
    let bar: int;
    let baz: float = 1.0;

    fn method() {
        self.bar = self.bar + 1;
    };
};
