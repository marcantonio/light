---
source: crates/codegen/src/tests.rs
assertion_line: 436
expression: "(test[1], res, res_opt)"
---
- "\nstruct Foo {\n    let a: int\n    let b: bool\n    fn c(d: int) -> int { self.a + d }\n}\nfn main() {\n    let x: Foo\n    x.a\n    x.c(2)\n}\n"
- "; ModuleID = 'main'\nsource_filename = \"main\"\n\n%\"main::Foo\" = type { i32, i1 }\n\ndefine void @main() {\nentry:\n  %x = alloca %\"main::Foo\", align 8\n  store %\"main::Foo\" zeroinitializer, %\"main::Foo\"* %x, align 4\n  %x1 = load %\"main::Foo\", %\"main::Foo\"* %x, align 4\n  %struct.field.gep = getelementptr inbounds %\"main::Foo\", %\"main::Foo\"* %x, i32 0, i32 0\n  %struct.0 = load i32, i32* %struct.field.gep, align 4\n  %x2 = load %\"main::Foo\", %\"main::Foo\"* %x, align 4\n  %\"call__main::Foo_c~int32~int32\" = call i32 @\"_main::Foo_c~int32~int32\"(%\"main::Foo\" %x2, i32 2)\n  ret void\n}\n\ndefine i32 @\"_main::Foo_c~int32~int32\"(%\"main::Foo\" %self, i32 %d) {\nentry:\n  %d2 = alloca i32, align 4\n  %self1 = alloca %\"main::Foo\", align 8\n  store %\"main::Foo\" %self, %\"main::Foo\"* %self1, align 4\n  store i32 %d, i32* %d2, align 4\n  %self3 = load %\"main::Foo\", %\"main::Foo\"* %self1, align 4\n  %struct.field.gep = getelementptr inbounds %\"main::Foo\", %\"main::Foo\"* %self1, i32 0, i32 0\n  %struct.0 = load i32, i32* %struct.field.gep, align 4\n  %d4 = load i32, i32* %d2, align 4\n  %add.int = add i32 %struct.0, %d4\n  ret i32 %add.int\n}\n"
- "; ModuleID = 'main'\nsource_filename = \"main\"\n\n%\"main::Foo\" = type { i32, i1 }\n\ndefine void @main() {\nentry:\n  %\"call__main::Foo_c~int32~int32\" = call i32 @\"_main::Foo_c~int32~int32\"(%\"main::Foo\" zeroinitializer, i32 2)\n  ret void\n}\n\ndefine i32 @\"_main::Foo_c~int32~int32\"(%\"main::Foo\" %self, i32 %d) {\nentry:\n  %self1 = alloca %\"main::Foo\", align 8\n  store %\"main::Foo\" %self, %\"main::Foo\"* %self1, align 8\n  %struct.field.gep = getelementptr inbounds %\"main::Foo\", %\"main::Foo\"* %self1, i64 0, i32 0\n  %struct.0 = load i32, i32* %struct.field.gep, align 8\n  %add.int = add i32 %struct.0, %d\n  ret i32 %add.int\n}\n"

