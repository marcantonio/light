---
source: crates/codegen/src/tests.rs
assertion_line: 74
expression: "(test[1], res, res_opt)"
---
- "\nextern fn putchar(x: int) -> int\nfn main() {\n    let x: int = 3\n    for y: int = 0; y < x; 1 {\n        putchar(46)\n    }\n    putchar(10)\n}\n"
- "; ModuleID = 'main'\nsource_filename = \"main\"\n\ndeclare i32 @putchar(i32)\n\ndefine void @main() {\nentry:\n  %y = alloca i32, align 4\n  %x = alloca i32, align 4\n  store i32 3, i32* %x, align 4\n  store i32 0, i32* %y, align 4\n  br label %for.cond\n\nfor.cond:                                         ; preds = %for.step, %entry\n  %y1 = load i32, i32* %y, align 4\n  %x2 = load i32, i32* %x, align 4\n  %slt.int = icmp slt i32 %y1, %x2\n  br i1 %slt.int, label %for.body, label %for.post\n\nfor.body:                                         ; preds = %for.cond\n  %call_putchar = call i32 @putchar(i32 46)\n  br label %for.step\n\nfor.step:                                         ; preds = %for.body\n  %y3 = load i32, i32* %y, align 4\n  %for.int.step = add i32 %y3, 1\n  store i32 %for.int.step, i32* %y, align 4\n  br label %for.cond\n\nfor.post:                                         ; preds = %for.cond\n  %call_putchar4 = call i32 @putchar(i32 10)\n  ret void\n}\n"
- "; ModuleID = 'main'\nsource_filename = \"main\"\n\ndeclare i32 @putchar(i32)\n\ndefine void @main() {\nentry:\n  br label %for.cond\n\nfor.cond:                                         ; preds = %for.body, %entry\n  %y3 = phi i32 [ 0, %entry ], [ %for.int.step, %for.body ]\n  %slt.int = icmp slt i32 %y3, 3\n  br i1 %slt.int, label %for.body, label %for.post\n\nfor.body:                                         ; preds = %for.cond\n  %call_putchar = call i32 @putchar(i32 46)\n  %for.int.step = add i32 %y3, 1\n  br label %for.cond\n\nfor.post:                                         ; preds = %for.cond\n  %call_putchar4 = call i32 @putchar(i32 10)\n  ret void\n}\n"

